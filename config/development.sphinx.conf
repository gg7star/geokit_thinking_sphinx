
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /Users/pascal/Sites/Ruby/geokit/log/development.searchd.log
  query_log = /Users/pascal/Sites/Ruby/geokit/log/development.searchd.query.log
  pid_file = /Users/pascal/Sites/Ruby/geokit/log/development.sphinx.pid
  workers = threads
  binlog_path = /Users/pascal/Sites/Ruby/geokit/tmp/binlog/development
}

source location_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = geokit_development
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `locations`.`id` * 2 + 0 AS `id`, `locations`.`name` AS `name`, `locations`.`id` AS `sphinx_internal_id`, 'Location' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, RADIANS(lat) AS `latitude`, RADIANS(lng) AS `longitude` FROM `locations` WHERE (`locations`.`id` BETWEEN $start AND $end) GROUP BY `locations`.`id`, `locations`.`name`, `locations`.`id` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`locations`.`id`), 1), IFNULL(MAX(`locations`.`id`), 1) FROM `locations`
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_float = latitude
  sql_attr_float = longitude
  sql_attr_string = sphinx_internal_class
  sql_field_string = name
}

index location_core
{
  type = plain
  path = /Users/pascal/Sites/Ruby/geokit/db/sphinx/development/location_core
  docinfo = extern
  source = location_core_0
}

index location
{
  type = distributed
  local = location_core
}
